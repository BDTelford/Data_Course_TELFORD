install.packages("broom")
install.packages("fitdistrplus")
# Read Data in
read.csv("../../Data/mushroom_growth.csv")
# Read Data in
df = read.csv("../../Data/mushroom_growth.csv")
# Load packages
library(modelr)
library(broom)
library(dplyr)
library(fitdistrplus)
library(tidyr)
#creates several plots exploring relationships between the response and predictors
glimpse(df)
ggplot(df, aes(x = Light, y = GrowthRate)) +
geom_point
library(tidyverse)
ggplot(df, aes(x = Light, y = GrowthRate)) +
geom_point
ggplot(df, aes(x = Light, y = GrowthRate)) +
geom_point()
ggplot(df, aes(x = Light, y = GrowthRate)) +
geom_point() +
geom_smooth(method = "lm")
#Relationship between GrowthRate and Nitrogen
ggplot(df, aes(x = Nirogen, y = GrowthRate)) +
geom_point() +
geom_smooth(method = "lm")
#Relationship between GrowthRate and Nitrogen
ggplot(df, aes(x = Nitrogen, y = GrowthRate)) +
geom_point() +
geom_smooth(method = "lm")
#Relationship between GrowthRate and Nitrogen
ggplot(df, aes(x = Nitrogen, y = GrowthRate)) +
geom_point() +
geom_smooth()
#Relationship between GrowthRate and Humidity
ggplot(df, aes(x = Humidity, y = GrowthRate)) +
geom_point() +
geom_smooth()
#Relationship between GrowthRate and Humidity
ggplot(df, aes(x = Humidity, y = GrowthRate)) +
geom_point() +
geom_smooth(method = "lm")
#Relationship between GrowthRate and Temperature
ggplot(df, aes(x = Temperature, y = GrowthRate)) +
geom_point() +
geom_smooth()
#defines at least 2 models that explain the dependent variable “GrowthRate”
#– One must be a lm() and
#– one must be an aov()
mod1 = glm(df, GrowthRate ~ Light)
#defines at least 2 models that explain the dependent variable “GrowthRate”
#– One must be a lm() and
#– one must be an aov()
mod1 = lm(GrowthRate ~ Light, data = df)
summary(mod1)
ggplot(df, aes(x = Light, y = GrowthRate)) +
geom_point() +
geom_smooth(method = "mod1")
ggplot(df, aes(x = Light, y = GrowthRate)) +
geom_point() +
geom_smooth(method = mod1)
plot(df$GrowthRate ~ df$Light)
abline(mod2, col="Blue")
plot(df$GrowthRate ~ df$Light)
abline(mod1, col="Blue")
mean(mod1$residuals^2)
#defines at least 2 models that explain the dependent variable “GrowthRate”
#– One must be a lm() and
#– one must be an aov()
mod1 = lm(GrowthRate ~ Light*Nitrogen, data = df)
mean(mod1$residuals^2)
plot(df$GrowthRate ~ df$Light)
abline(mod1, col="Blue")
mod2 = aov(GrowthRate ~ Light*Nitrogen, data = df)
summary(mod2)
plot(df$GrowthRate ~ df$Light)
abline(mod2, col="Blue")
mean(mod2$residuals^2)
# Load packages
library(modelr)
library(broom)
library(dplyr)
library(fitdistrplus)
library(tidyverse)
# Read Data in
df = read.csv("../../Data/mushroom_growth.csv")
#creates several plots exploring relationships between the response and predictors
glimpse(df)
#Relationship between GrowthRate and light
ggplot(df, aes(x = Light, y = GrowthRate)) +
geom_point() +
geom_smooth(method = "lm")
#Relationship between GrowthRate and Nitrogen
ggplot(df, aes(x = Nitrogen, y = GrowthRate)) +
geom_point() +
geom_smooth()
#Relationship between GrowthRate and Humidity
ggplot(df, aes(x = Humidity, y = GrowthRate)) +
geom_point()
#Relationship between GrowthRate and Temperature
ggplot(df, aes(x = Temperature, y = GrowthRate)) +
geom_point() +
geom_smooth()
#defines at least 2 models that explain the dependent variable “GrowthRate”
#– One must be a lm() and
#– one must be an aov()
mod1 = lm(GrowthRate ~ Light*Nitrogen, data = df)
summary(mod1)
plot(df$GrowthRate ~ df$Light)
abline(mod1, col="Blue")
mean(mod1$residuals^2)
mod2 = aov(GrowthRate ~ Nitrogen, data = df)
summary(mod2)
plot(df$GrowthRate ~ df$Nitrogen)
abline(mod2, col="Blue")
mean(mod2$residuals^2)
mod3 = loess(GrowthRate ~ Nitrogen, data = df)
summary(mod3)
mean(mod3$residuals^2)
plot(df$GrowthRate ~ df$Nitrogen)
abline(mod3, col="Blue")
pred = predict(loess(GrowthRate ~ Nitrogen, data = df))
plot(df$GrowthRate ~ df$Nitrogen)
lines(pred, x=df$Nitrogen, col="red")
ggplot(df, aes(x = Nitrogen, y = GrowthRate)) +
geom_point() +
geom_smooth(se = FALSE) +
geom_point(aes(y=pred), color = "RED", size 4)
ggplot(df, aes(x = Nitrogen, y = GrowthRate)) +
geom_point() +
geom_smooth(se = FALSE) +
geom_point(aes(y=pred), color = "Red", size 4)
ggplot(df, aes(x = Nitrogen, y = GrowthRate)) +
geom_point() +
geom_smooth() +
geom_point(aes(y=pred), color = "Red", size 4)
ggplot(df, aes(x = Nitrogen, y = GrowthRate)) +
geom_point() +
geom_smooth(se = FALSE) +
geom_point(aes(y=pred), color = "Red")
ggplot(df, aes(x = Nitrogen, y = GrowthRate)) +
geom_point() +
geom_smooth(se = FALSE) +
geom_point(aes(y=pred), color = "Red", size = "4")
ggplot(df, aes(x = Nitrogen, y = GrowthRate)) +
geom_point() +
geom_smooth(se = FALSE) +
geom_point(aes(y=pred), color = "Red")
mean(mod3$residuals^2)
pred = predict(loess(GrowthRate ~ Nitrogen*Species, data = df))
vars = names(df)
install.packages("glmulti")
library(glmulti)
install.packages("rJava")
library(rJava)
library(glmulti)
library(glmulti)
install.packages("rJava")
library(rJava)
system("java -version")
R --version
R.Version()
Sys.getenv("R_ARCH")
if(Sys.getenv("JAVA_HOME")!=""){
Sys.setenv(JAVA_HOME="")
}
library(rJava)
library(glmulti)
glmulti(GrowthRate, vars, df, method ="h")
glmulti(df$GrowthRate, vars, df, method ="h")
res <- glmulti(GrowthRate ~ Light + Nitrogen + Temperature, data=df,
level=1, fitfunction=rma.glmulti, crit="aicc", confsetsize=128)
glmulti("GrowthRate",xr=vars,data=df,level=1)
glm1 = glm(GrowthRate ~ Light + Nitrogen + Temerature, data = df)
glm1 = glm(GrowthRate ~ Light + Nitrogen + Temperature, data = df)
growthmod = glmulti(glm1, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes
View(growthmod)
summary(growthmod)
#defines at least 2 models that explain the dependent variable “GrowthRate”
#– One must be a lm() and
#– one must be an aov()
mod1 = lm(GrowthRate ~ Light + Temperature, data = df)
mean(mod1$residuals^2)
mean(mod3$residuals^2)
plot(df$GrowthRate ~ df$Light)
abline(mod1, col="Blue")
glm1 = loess(GrowthRate ~ Light + Nitrogen + Temperature, data = df)
glm1 = loess(GrowthRate ~ Light + Nitrogen + Temperature, data = df)
growthmod = glmulti(glm1, # use the model with built as a starting point
level = 1,  #  just look at main effects
crit="aicc") # use AICc because it works better than AIC for small sample sizes
summary(growthmod)
ggplot(df, aes(x = Nitrogen, y = GrowthRate)) +
geom_point() +
geom_smooth(se = FALSE) +
geom_point(aes(y=pred), color = "Red")
mean(mod3$residuals^2)
mean(mod2$residuals^2)
mean(mod1$residuals^2)
preds = add_predictions(df, mod1)
View(preds)
meansq_mod1 = mean(mod1$residuals^2)
meansq_mod2 = mean(mod2$residuals^2)
meansq_mod3 = mean(mod3$residuals^2)
View(mod1)
mean(mod1$residuals^2)
newdf = data.frame(meansq_mod1, meansq_mod2, meansq_mod3)
View(newdf)
new_long = gather(newdf,key = Model, value = Mean, -c(1:3) )
View(new_long)
View(newdf)
View(new_long)
gather(newdf,key = Model, value = Mean, -c(1:3) )
gather(newdf,key = Model, value = Mean, c(1:3) )
new_long %>% column_to_rownames(var="names")
new_long = gather(newdf,key = Model, value = Mean, c(1:3))
View(new_long)
new_long %>% column_to_rownames(var="Model")
rownames(new_long) <- c(“Mod1”, “Mod2”, "Mod3")
rownames(new_long) = c(“Mod1”, “Mod2”,"Mod3")
View(new_long)
new_long = gather(newdf,key = Model, value = Mean, c(1:3))
new_long$Model[new_long$Mean == min(new_long$Mean)]
#adds predictions based on new values for the independent variables used in your model
preds = add_predictions(df, mod1)
ggplot(df, aes(x = Temperature, y = GrowthRate)) +
geom_point() +
geom_smooth(se = FALSE) +
geom_point(aes(y=preds), color = "Red")
ggplot(df, aes(x = Temperature, y = GrowthRate)) +
geom_point() +
geom_point(aes(y= preds), color = "Red")
ggplot(df, aes(x = Temperature, y = GrowthRate)) +
geom_point()
ggplot(df, aes(x = Light, y = GrowthRate)) +
geom_point() +
geom_point(aes(y= preds), color = "Red")
ggplot(df, aes(x = Light, y = GrowthRate)) +
geom_point() +
geom_point(aes(y= preds), color = "Red")
ggplot(df, aes(x = Light, y = GrowthRate)) +
geom_point()
preds = add_predictions(df, mod1)
View(preds)
#plots these predictions alongside the real data
ggplot(preds, aes(x = Light, y = GrowthRate)) +
geom_point() +
geom_point(aes(y= pred), color = "Red")
# Load packages
library(modelr)
library(broom)
library(dplyr)
library(fitdistrplus)
library(tidyverse)
# Read Data in
df = read.csv("../../Data/mushroom_growth.csv")
#creates several plots exploring relationships between the response and predictors
glimpse(df)
#Relationship between GrowthRate and light
ggplot(df, aes(x = Light, y = GrowthRate)) +
geom_point() +
geom_smooth(method = "lm")
#Relationship between GrowthRate and Nitrogen
ggplot(df, aes(x = Nitrogen, y = GrowthRate)) +
geom_point() +
geom_smooth()
#Relationship between GrowthRate and Humidity
ggplot(df, aes(x = Humidity, y = GrowthRate)) +
geom_point()
#Relationship between GrowthRate and Temperature
ggplot(df, aes(x = Temperature, y = GrowthRate)) +
geom_point() +
geom_smooth()
#defines at least 2 models that explain the dependent variable “GrowthRate”
#– One must be a lm() and
#– one must be an aov()
mod1 = lm(GrowthRate ~ Light , data = df)
summary(mod1)
plot(df$GrowthRate ~ df$Light)
abline(mod1, col="Blue")
mean(mod1$residuals^2)
mod2 = aov(GrowthRate ~ Nitrogen, data = df)
summary(mod2)
plot(df$GrowthRate ~ df$Nitrogen)
abline(mod2, col="Blue")
mean(mod2$residuals^2)
mod3 = loess(GrowthRate ~ Nitrogen, data = df)
summary(mod3)
pred = predict(loess(GrowthRate ~ Nitrogen, data = df))
ggplot(df, aes(x = Nitrogen, y = GrowthRate)) +
geom_point() +
geom_smooth(se = FALSE) +
geom_point(aes(y=pred), color = "Red")
mean(mod3$residuals^2)
# selects the best model you tried
meansq_mod1 = mean(mod1$residuals^2)
meansq_mod2 = mean(mod2$residuals^2)
meansq_mod3 = mean(mod3$residuals^2)
newdf = data.frame(meansq_mod1, meansq_mod2, meansq_mod3)
new_long = gather(newdf,key = Model, value = Mean, c(1:3))
new_long$Model[new_long$Mean == min(new_long$Mean)]
#adds predictions based on new values for the independent variables used in your model
preds = add_predictions(df, mod1)
#plots these predictions alongside the real data
ggplot(preds, aes(x = Light, y = GrowthRate)) +
geom_point() +
geom_point(aes(y= pred), color = "Red")
new_long$Model[new_long$Mean == min(new_long$Mean)]
geom_point(aes(y= pred), color = "Red", size = "4")
#plots these predictions alongside the real data
ggplot(preds, aes(x = Light, y = GrowthRate)) +
geom_point() +
geom_point(aes(y= pred), color = "Red", size = "4")
#plots these predictions alongside the real data
ggplot(preds, aes(x = Light, y = GrowthRate)) +
geom_point() +
geom_point(aes(y= pred), color = "Red")
library(tidyr)
?rnorm
x = rnorm(10, mean = 10)
y = rnorm(10, mean = 10.5)
z = rnorm(10)
obs = 1:10
df = data.frame(obs = obs, x=x, y=y, z=z)
View(df)
df.l = gather(df, key = "Stock", value = "PriceChange", c(x,y,z))
View(df.l)
spread(df.l, Stock, PriceChange)
aov1 = aov(PriceChange ~ Stock*obs, data = df.l)
summary(aov1)
x
y
z
?TukeyHSD
TukeyHSD(aov1)
df %>% mutate(total = x+y+z, min = apply(df[,2:4],1, min))
library(dplyr)
df %>% mutate(total = x+y+z, min = apply(df[,2:4],1, min))
?apply
select(df, c(x,y))
df$group = c(rep("A",6),rep("B",4))
View(df)
df %>% group_by(group) %>%
summarise(meanx = mean(x), N = n())
df.l %>% group_by(Stock) %>%
summarise(mean = mean(PriceChange),
sum = sum(PriceChange),
min = min(PriceChange),
Nonsense = n(),
StDev = sd(PriceChange))
df2 = read.csv("../iris.csv")
plot(df2)
df2 = read.csv("../../Data/iris.csv")
plot(df2)
mod1 = aov(Petal.Length ~ Petal.Width*Species, data = df2)
mod2 = aov(Petal.Length ~ Petal.Width+Species, data = df2)
summary(mod1)
summary(mod2)
anova(mod1,mod2)
library(modelr)
df2 = add_predictions(df2,mod1,var = "mod1")
df2 = add_predictions(df2,mod2,var = "mod2")
library(ggplot2)
ggplot(df2) +
geom_point(aes(x=Petal.Width,y=Petal.Length,color=Species)) +
geom_smooth(aes(x=Petal.Width, y=mod1,col=Species),method = "lm") +
geom_smooth(aes(x=Petal.Width, y=mod2,color=Species),method = "lm",linetype=5)
sqrt(mean((df2$mod1 - df2$Petal.Length)^2))
sqrt(mean((df2$mod2 - df2$Petal.Length)^2)
sqrt(mean((df2$mod2 - df2$Petal.Length)^2)
p1 = ggplot(df2) +
geom_point(aes(x=Petal.Width,y=Petal.Length,color=Species)) +
geom_smooth(aes(x=Petal.Width, y=mod1,col=Species),method = "lm") +
geom_smooth(aes(x=Petal.Width, y=mod2,color=Species),method = "lm",linetype=5)
p1 + ylim(c(0,5))
?outlier()
library(outliers)
?outlier()
install.packages("outliers")
library(outliers)
?outlier()
df2[(df2$Petal.Length < mean(df2$Petal.Length)),]
mean(df2$Petal.Length)
p1 +
stat_ellipse(aes(x=Petal.Width,y=Petal.Length,color=Species))
